{"version":3,"sources":["data/data.js","components/ProjectBuilder.js","components/NoteLink.js","components/NoteText.js","components/NoteChoice.js","components/NoteBuilder.js","components/ProjectContent.js","components/ProjectSelect.js","components/Title.js","views/App.js","reportWebVitals.js","index.js"],"names":["NOTE_TYPE","type","title","text","url","ProjectBuilder","props","useState","project","isValid","undefined","updateAndValidateProject","canSubmit","onSubmit","event","preventDefault","submit","noValidate","className","htmlFor","id","value","onChange","e","target","length","style","display","disabled","color","icon","faGrinBeam","NoteLink","href","NoteText","NoteChoice","notes","NotesBuilder","updateAndValidateUrl","updateAndValidateTitle","updateAndValidateText","updateType","name","checked","ProjectContent","addNote","setAddNotes","noteInfo","setNoteSubmission","Object","entries","subject","map","i","subSubject","projectName","faPlus","NoteBuilder","info","noteName","ProjectSelect","setProject","Title","faStickyNote","App","projectInfo","setProjectSubmission","data","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAAaA,EACH,OADGA,EAEH,OAKK,eACX,cAAgB,CACZ,CACIC,KAAMD,EACNE,MAAO,uBACPC,KAAM,8FAEV,CACIF,KAAMD,EACNI,IAAK,gDACLD,KAAM,cAEV,CACIF,KAAMD,EACNI,IAAK,gCACLD,KAAM,qBAjBQ,aAoBR,CACV,CACIF,KAAMD,EACNE,MAAO,cACPC,KAAM,m2BAEV,CACIF,KAAMD,EACNI,IAAK,mCACLD,KAAM,2B,qBCsBHE,EApDQ,SAAAC,GAAU,IAAD,EACgBC,mBAAS,CACjDC,QAAQ,GACRC,aAASC,IAHe,mBACrBF,EADqB,KACZG,EADY,KAyBxBC,EAAYJ,EAAQC,QAExB,OACI,gCACI,oDACA,uBAAMI,SAvBK,SAAAC,GAGfA,EAAMC,iBACNT,EAAMU,OAAO,CACTR,QAASA,EAAQA,SAClB,oBAiB6BS,YAAU,EAACC,UAAU,gBAAjD,UAEI,sBAAKA,UAAU,WAAf,UACI,uBAAOA,UAAU,4CAA4CC,QAAQ,aAArE,wCACA,sBAAKD,UAAU,WAAf,UACI,uBAAOE,GAAG,aAAaF,UAAU,eAAejB,KAAK,OAC9CoB,MAAOb,EAAQA,QACfc,SAAU,SAAAC,GApBR,IAAAT,EACzBH,EAAyB,CACrBH,SAFqBM,EAoBkCS,GAlBxCC,OAAOH,MACtBZ,QAAQK,EAAMU,OAAOH,MAAMI,OAAQ,OAkBvB,qBAAKP,UAAU,mBAAmBQ,OAA2B,IAApBlB,EAAQC,QAAoB,CAACkB,QAAQ,SAAW,CAACA,QAAS,QAAnG,gDAGR,qBAAKT,UAAU,WAAf,SACI,qBAAKA,UAAU,eAAf,SACI,yBAAQA,UAAU,yBAAyBjB,KAAK,SAAS2B,UAAWhB,EAAWiB,MAAOjB,EAAY,UAAY,YAA9G,gCAA8I,cAAC,IAAD,CAAiBkB,KAAMC,oBCjC9KC,EAdE,SAAA1B,GAAK,OAClB,qBAAKY,UAAU,YAAf,SACI,sBAAKA,UAAU,oCAAf,UACI,qBAAKA,UAAU,cAAf,uBACA,qBAAKA,UAAU,0BAAf,SAEsB,KAAbZ,EAAMH,KACH,mBAAGe,UAAU,uBAAb,SAAoC,mBAAGe,KAAM3B,EAAMF,IAAf,SAAqBE,EAAMH,SAC9D,mBAAGe,UAAU,uBAAb,SAAoC,mBAAGe,KAAM3B,EAAMF,IAAf,SAAqBE,EAAMF,gBCKzE8B,EAbE,SAAA5B,GAAK,OAEd,qBAAKY,UAAU,WAAf,SACI,sBAAKA,UAAU,oCAAf,UACI,qBAAKA,UAAU,cAAf,uBACA,sBAAKA,UAAU,yBAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BZ,EAAMJ,QAClC,mBAAGgB,UAAU,uBAAb,SAAqCZ,EAAMH,gBCmBhDgC,EArBG,SAAA7B,GACd,OAAIA,EAAM8B,MAAMnC,OAASD,EAEb,cAAC,EAAD,CACII,IAAKE,EAAM8B,MAAMhC,IACjBD,KAAMG,EAAM8B,MAAMjC,OAGxBG,EAAM8B,MAAMnC,OAASD,EAEvB,cAAC,EAAD,CACIE,MAAOI,EAAM8B,MAAMlC,MACnBC,KAAMG,EAAM8B,MAAMjC,OAInB,ICiHAkC,EAnIM,SAAA/B,GAAU,IAAD,EACUC,mBAAS,CACzCH,IAAK,GACLK,aAASC,IAHa,mBACnBN,EADmB,KACdkC,EADc,OAMc/B,mBAAS,CAC7CL,MAAM,GACNO,aAASC,IARa,mBAMnBR,EANmB,KAMZqC,EANY,OAWYhC,mBAAS,CAC3CJ,KAAK,GACLM,aAAQC,IAbc,mBAWnBP,EAXmB,KAWbqC,EAXa,OAiBCjC,mBAAS,CAACN,KAAK,KAjBhB,mBAiBnBA,EAjBmB,KAiBbwC,EAjBa,KA0DpB7B,EAAW,WACb,QAAGX,IAAOD,IAAkBI,EAAIK,aAGhBR,IAASD,GAAkBG,EAAKM,SAAaR,IAASD,GAAkBE,EAAMO,UAKlG,OACI,uBAAMI,SAjDS,SAAAC,GAGfA,EAAMC,iBACNT,EAAMU,OAAO,CACTd,MAAOA,EAAMA,MACbD,KAAMA,EACNG,IAAKA,EAAIA,IACTD,KAAMA,EAAKA,MACZ,oCAwCyBc,YAAU,EAAtC,UACI,gDACA,sBAAKC,UAAU,cAAf,UACI,sBAAKA,UAAU,YAAf,UACI,wBAAQA,UAAU,+BAAlB,wBACA,sBAAKA,UAAU,WAAf,UACI,uBAAOjB,KAAK,QAAQiB,UAAU,mBAAmBE,GAAG,OAAOsB,KAAK,WACzDC,QAAS1C,IAASD,EAClBsB,SAAU,SAAAC,GAAC,OAAIkB,EAAWlB,EAAEC,OAAOJ,OACzC,IACD,wBAAOF,UAAU,mBAAmBC,QAAQ,OAA5C,iBAAwD,OACxD,qBAAKD,UAAU,qCAAqCQ,MAAOzB,IAASD,EAAgB,CAAC2B,QAAQ,SAAW,CAACA,QAAS,QAAlH,mEAGJ,sBAAKT,UAAU,WAAf,UACI,uBAAOjB,KAAK,QAAQiB,UAAU,mBAAmBE,GAAG,OAAOsB,KAAK,WACzDC,QAAS1C,IAASD,EAClBsB,SAAU,SAAAC,GAAC,OAAIkB,EAAWlB,EAAEC,OAAOJ,OACzC,IACD,uBAAOF,UAAU,mBAAmBC,QAAQ,OAA5C,kBACA,qBAAKD,UAAU,qCAAqCQ,MAAOzB,IAASD,EAAgB,CAAC2B,QAAQ,SAAW,CAACA,QAAS,QAAlH,mDAIR,sBAAKT,UAAU,WAAf,UACI,uBAAOA,UAAU,0BAA0BC,QAAQ,QAAnD,oBACA,qBAAKD,UAAU,WAAf,SACI,uBAAOE,GAAG,QAAQF,UAAU,eAAejB,KAAK,OACzCoB,MAAOnB,EAAMA,MACboB,SAAU,SAAAC,GApDV,IAAAT,EACvByB,EAAuB,CACnBrC,OAFmBY,EAoDkCS,GAlDxCC,OAAOH,MACnBZ,QAASK,EAAMU,OAAOH,MAAMI,OAAQ,YAqDjC,sBAAKP,UAAU,WAAf,UACI,uBAAOA,UAAU,0BAA0BC,QAAQ,OAAnD,mBACA,qBAAKD,UAAU,WAAf,SACI,uBAAOE,GAAG,OAAOF,UAAU,eAAejB,KAAK,OACxCoB,MAAOlB,EAAKA,KACZmB,SAAU,SAAAC,GAnEX,IAAAT,EACtB0B,EAAsB,CAClBrC,MAFkBW,EAmEkCS,GAjExCC,OAAOH,MACnBZ,QAAQK,EAAMU,OAAOH,MAAMI,OAAQ,YAoE/B,sBAAKP,UAAU,WAAf,UACI,uBAAOA,UAAU,0BAA0BC,QAAQ,MAAnD,kBACA,sBAAKD,UAAU,WAAf,UACI,uBAAOE,GAAG,MAAMF,UAAU,eAAejB,KAAK,OACvCoB,MAAOjB,EAAIA,IACXkB,SAAU,SAAAC,GAnFZ,IAAAT,EACrBwB,EAAqB,CACjBlC,KAFiBU,EAmFkCS,GAjFxCC,OAAOH,MAClBZ,QAAQK,EAAMU,OAAOH,MAAMI,OAAQ,OAiFvB,qBAAKP,UAAU,mBAAmBQ,MA/D3CzB,IAASD,IAAkC,IAAhBI,EAAIK,QA+DuC,CAACkB,QAAQ,SAAW,CAACA,QAAS,QAA3F,uDAKZ,qBAAKT,UAAU,WAAf,SACI,qBAAKA,UAAU,eAAf,SACI,wBAAQA,UAAU,kBAAkBjB,KAAK,SAAS2B,UAAWhB,IAAaiB,MAAOjB,EAAY,UAAY,YAAzG,4BCnELgC,EArDQ,SAAAtC,GAAU,IAAD,EACDC,oBACvB,GAFwB,mBACtBsC,EADsB,KACdC,EADc,OAIMvC,mBAAS,CACnCN,KAAK,GACLE,KAAK,GACLD,MAAM,GACNE,IAAI,KARgB,mBAItB2C,EAJsB,KAIbC,EAJa,KAiB5B,OACI,gCACI,8BAEQC,OAAOC,QAAQ5C,EAAM6C,SAASC,KAAI,WAAoBC,GAApB,uBAAOC,GAAP,kBAC9B,cAAC,EAAD,CAAYlB,MAASkB,SAKjC,qBAAKpC,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,CAAYkB,MAASW,QAI7B,qBAAK7B,UAAU,oBAAf,SACQ,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,YAAYjB,KAAK,WAAWmB,GAAI,WAAWd,EAAMiD,YAC3DZ,QAASE,EAAUvB,SAAU,kBAAMwB,GAAaD,MACvD,wBAAO3B,UAAU,+BAAgCC,QAAS,WAAWb,EAAMiD,YAA3E,cAAyF,cAAC,IAAD,CAAiBzB,KAAM0B,MAAhH,qBAGZ,qBAAKtC,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SAEI2B,EACI,cAACY,EAAD,CAAazC,OAhCX,SAAC0C,EAAMC,GACzBX,EAAkB,2BAAIU,GAAL,IAAWC,iBA+B2B,WC1BhDC,EArBO,SAAAtD,GAAU,IAAD,EACCC,oBAAS,GADV,mBACrBC,EADqB,KACbqD,EADa,KAE3B,OACA,sBAAK3C,UAAU,mBAAf,UACI,gCACI,6BAAKZ,EAAMiD,cACX,sBAAKrC,UAAU,cAAf,UACI,uBAAOA,UAAU,mBAAmBjB,KAAK,WAAYmB,GAAI,UAAUd,EAAMiD,YAClEZ,QAASnC,EAASc,SAAU,kBAAMuC,GAAYrD,MACrD,uBAAOU,UAAU,mBAAmBC,QAAS,UAAUb,EAAMiD,YAA7D,sCAGR,8BACK/C,EACG,cAAC,EAAD,CAAgB2C,QAAS7C,EAAM6C,QAASI,YAAajD,EAAMiD,cAAe,SCX3EO,EAHD,SAAAxD,GAAK,OACf,qBAAIY,UAAU,QAAd,UAAuBZ,EAAMH,KAA7B,IAAmC,cAAC,IAAD,CAAiB2B,KAAMiC,UCkD/CC,EAhDH,WAAM,IAAD,EAC2BzD,mBAAS,CAC7CC,QAAQ,KAFC,mBACPyD,EADO,KACKC,EADL,KAoBb,OACI,sBAAKhD,UAAU,iBAAf,UACI,cAAC,EAAD,CAAOf,KAAK,qBACZ,qBAAKe,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,cAAC,EAAD,CAAgBF,OApBP,SAAC0C,EAAMH,GAY5BW,EAAqB,2BAAIR,GAAL,IAAWH,wBAW3B,qBAAMnC,GAAG,UAAT,SACI,iDAEJ,sBAAKF,UAAU,6CAAf,UAEQ+B,OAAOC,QAAQiB,GAAMf,KAAI,WAAiBC,GAAjB,uBAAEe,EAAF,KAAOjB,EAAP,YACrB,cAAC,EAAD,CAAeA,QAASA,EAASI,YAAaa,OAKzB,KAAxBH,EAAYzD,SACb,mCAAE,cAAC,EAAD,CAAe+C,YAAaU,EAAYzD,QAAS2C,QAAS,cClCjEkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2850590e.chunk.js","sourcesContent":["export const NOTE_TYPE = {\n    TEXT: \"text\",\n    LINK: \"link\"\n}\n\nexport const NO_PROJECT = \"no project\"\n\nexport default {\n    \"Learn React\" : [\n        {\n            type: NOTE_TYPE.TEXT,\n            title: \"Create a new project\",\n            text: \"cd to the project directory\\nnpx create-react-app project-name\\ncd project-name\\nnpm start\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://reactjs.org/docs/getting-started.html\",\n            text: \"React docs\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://reactstrap.github.io/\",\n            text: \"Reactstrap docs\"\n        }\n    ],\n    [NO_PROJECT]: [\n        {\n            type: NOTE_TYPE.TEXT,\n            title: \"Lorem ipsum\",\n            text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Amet massa vitae tortor condimentum. Pretium aenean pharetra magna ac placerat vestibulum lectus mauris ultrices. Justo nec ultrices dui sapien eget mi proin sed libero. Ultricies leo integer malesuada nunc vel risus commodo viverra maecenas. Nisi quis eleifend quam adipiscing. Sit amet tellus cras adipiscing enim eu. Tincidunt tortor aliquam nulla facilisi cras fermentum. Orci phasellus egestas tellus rutrum. Tortor dignissim convallis aenean et. Imperdiet proin fermentum leo vel orci porta non pulvinar neque. Purus semper eget duis at tellus. Ut consequat semper viverra nam libero justo laoreet sit amet. Sed enim ut sem viverra aliquet eget. Amet volutpat consequat mauris nunc congue nisi. Aliquet nibh praesent tristique magna.\"\n        },\n        {\n            type: NOTE_TYPE.LINK,\n            url: \"https://loremipsum.io/generator/\",\n            text: \"Lorem Ipsum generator\"\n        }\n    ]\n}","import {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faGrinBeam} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ProjectBuilder = props => {\n    const [project, updateAndValidateProject] = useState({\n        project:\"\",\n        isValid: undefined\n    });\n\n\n    const formSubmit = event => {\n        // A \"submit\" button will refresh the page, which we don't want in this case\n        // The following line prevents the page refresh.\n        event.preventDefault();\n        props.submit({\n            project: project.project\n        }, \"Unnamed project\");\n\n    }\n\n    const onProjectInputChange = event => {\n        updateAndValidateProject({\n            project: event.target.value,\n            isValid:event.target.value.length >0\n        })\n    }\n\n\n    let canSubmit = project.isValid;\n\n    return (\n        <div>\n            <h2 >Got a new project?</h2>\n            <form onSubmit={formSubmit} noValidate className=\"projectWindow\">\n\n                <div className=\"row my-2\">\n                    <label className=\"col-sm-3 col-form-label projectWindowFont\" htmlFor=\"newProject\">Submit a new project name:</label>\n                    <div className=\"col-sm-9\">\n                        <input id=\"newProject\" className=\"form-control\" type=\"text\"\n                               value={project.project}\n                               onChange={e => onProjectInputChange(e)}/>\n                        <div className=\"invalid-feedback\" style={project.isValid === false ? {display:\"block\"} : {display: \"none\"}}>Project name cannot be empty</div>\n                    </div>\n                </div>\n                <div className=\"row my-2\">\n                    <div className=\"col text-end\">\n                        <button className=\"btn btn-primary btn-lg\" type=\"submit\" disabled={!canSubmit} color={canSubmit ? \"primary\" : \"secondary\"}>Submit, Lets GO !! <FontAwesomeIcon icon={faGrinBeam} /></button>\n                    </div>\n                </div>\n            </form>\n        </div>\n\n    )\n}\n\nexport default ProjectBuilder;","const NoteLink = props =>\n    <div className=\"col gy-4 \">\n        <div className=\"card border-primary border-2 mb-4\" >\n            <div className=\"card-header\">Link Note</div>\n            <div className=\"card-body text-primary \">\n                {\n                    (props.text!==\"\") ?\n                        <p className=\"card-text whitespace\"><a href={props.url}>{props.text}</a></p>\n                        :<p className=\"card-text whitespace\"><a href={props.url}>{props.url}</a></p>\n                }\n            </div>\n        </div>\n    </div>\n\nexport default NoteLink;","const NoteText = props =>\n\n        <div className=\"col gy-4\">\n            <div className=\"card border-success mb-3 border-2\">\n                <div className=\"card-header\">Text Note</div>\n                <div className=\"card-body text-success\">\n                    <h4 className=\"card-title\">{props.title}</h4>\n                    <p className=\"card-text whiteSpace\">{props.text}</p>\n                </div>\n            </div>\n        </div>\n\n\nexport default NoteText;","import {NOTE_TYPE} from \"../data/data\";\nimport NoteLink from \"./NoteLink\";\nimport NoteText from \"./NoteText\";\n\n\nconst NoteChoice =props=>{\n    if (props.notes.type === NOTE_TYPE.LINK){\n        return(\n                <NoteLink\n                    url={props.notes.url}\n                    text={props.notes.text}\n                />\n        )\n    }else if (props.notes.type === NOTE_TYPE.TEXT){\n        return (\n            <NoteText\n                title={props.notes.title}\n                text={props.notes.text}\n            />\n        )\n    }else{\n        return(\"\")\n    }\n\n}\n\nexport default NoteChoice;","import {useState} from \"react\";\nimport {NOTE_TYPE} from \"../data/data\";\n\nconst NotesBuilder = props => {\n    const [url, updateAndValidateUrl] = useState({\n        url: \"\",\n        isValid: undefined\n    });\n\n    const [title, updateAndValidateTitle] = useState({\n        title:\"\",\n        isValid: undefined\n\n    });\n    const [text, updateAndValidateText] = useState({\n        text:\"\",\n        isValid:undefined\n\n    });\n\n    const [type, updateType] = useState({type:\"\"});\n\n    const formSubmit = event => {\n        // A \"submit\" button will refresh the page, which we don't want in this case\n        // The following line prevents the page refresh.\n        event.preventDefault();\n        props.submit({\n            title: title.title,\n            type: type,\n            url: url.url,\n            text: text.text,\n        }, \"Controlled Form with Validation\");\n\n    }\n\n    const onUrlInputChange = event => {\n        updateAndValidateUrl({\n            url: event.target.value,\n            isValid:event.target.value.length >1\n        })\n    }\n\n    const onTextInputChange = event => {\n        updateAndValidateText({\n            text: event.target.value,\n            isValid:event.target.value.length >0\n        })\n    }\n    const onTitleInputChange = event =>{\n        updateAndValidateTitle({\n            title: event.target.value,\n             isValid: event.target.value.length >0\n    })\n    }\n\n    const linkNoteChecking= () =>{\n        return type === NOTE_TYPE.LINK && url.isValid === false;\n\n    }\n\n\n    const canSubmit =() => {\n        if(type===NOTE_TYPE.LINK && url.isValid){\n            return true\n        }\n        else return !!((type === NOTE_TYPE.TEXT && text.isValid) || (type === NOTE_TYPE.TEXT && title.isValid));\n\n    };\n\n\n    return (\n        <form onSubmit={formSubmit} noValidate>\n            <h4>Add a new note</h4>\n            <div className=\"fontAddNote\">\n                <div className=\"row my-2 \">\n                    <legend className=\"col-form-label col-sm-3 pt-0\">Note type:</legend>\n                    <div className=\"col-auto\">\n                        <input type=\"radio\" className=\"form-check-input\" id=\"text\" name=\"noteType\"\n                               checked={type === NOTE_TYPE.TEXT}\n                               onChange={e => updateType(e.target.id)} />\n                        {\" \"}\n                        <label className=\"form-check-label\" htmlFor=\"text\">Text{\" \"}</label>\n                        <div className=\"invalid-feedback feedbackCustomize\" style={type === NOTE_TYPE.TEXT? {display:\"block\"} : {display: \"none\"}}>For Text note: text and title cannot both be empty</div>\n                    </div>\n\n                    <div className=\"col-auto\">\n                        <input type=\"radio\" className=\"form-check-input\" id=\"link\" name=\"noteType\"\n                               checked={type === NOTE_TYPE.LINK}\n                               onChange={e => updateType(e.target.id)} />\n                        {\" \"}\n                        <label className=\"form-check-label\" htmlFor=\"link\">Link</label>\n                        <div className=\"invalid-feedback feedbackCustomize\" style={type === NOTE_TYPE.LINK? {display:\"block\"} : {display: \"none\"}}>For Link note: it must have URL</div>\n                    </div>\n                </div>\n\n                <div className=\"row my-2\">\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"title\">Title:</label>\n                    <div className=\"col-sm-9\">\n                        <input id=\"title\" className=\"form-control\" type=\"text\"\n                               value={title.title}\n                               onChange={e => onTitleInputChange(e)}/>\n                    </div>\n                </div>\n\n                <div className=\"row my-2\">\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"text\">Text:</label>\n                    <div className=\"col-sm-9\">\n                        <input id=\"text\" className=\"form-control\" type=\"text\"\n                               value={text.text}\n                               onChange={e => onTextInputChange(e)}/>\n                    </div>\n                </div>\n\n                <div className=\"row my-2\">\n                    <label className=\"col-sm-3 col-form-label\" htmlFor=\"url\">URL:</label>\n                    <div className=\"col-sm-9\">\n                        <input id=\"url\" className=\"form-control\" type=\"text\"\n                               value={url.url}\n                               onChange={e => onUrlInputChange(e)}/>\n                        <div className=\"invalid-feedback\" style={linkNoteChecking()? {display:\"block\"} : {display: \"none\"}}>For link note: you must have URL</div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"row my-2\">\n                <div className=\"col text-end\">\n                    <button className=\"btn btn-primary\" type=\"submit\" disabled={!canSubmit()} color={canSubmit ? \"primary\" : \"secondary\"}>Submit</button>\n                </div>\n            </div>\n        </form>\n\n    )\n}\n\nexport default NotesBuilder;","import NoteChoice from \"./NoteChoice\";\nimport NoteBuilder from \"./NoteBuilder\";\nimport {useState} from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlus} from \"@fortawesome/free-solid-svg-icons\";\n\nconst ProjectContent = props => {\n    const[addNote,setAddNotes]=useState(\n        false\n    )\n    const[noteInfo,setNoteSubmission]=useState({\n            type:\"\",\n            text:\"\",\n            title:\"\",\n            url:\"\",\n        }\n    )\n\n    const noteSubmitted = (info, noteName) => {\n        setNoteSubmission({...info, noteName})\n    }\n\n\n    return(\n        <div>\n            <div>\n                {\n                    Object.entries(props.subject).map(([key, subSubject], i) => (\n                        <NoteChoice notes = {subSubject} />\n                        )\n                    )\n                }\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <NoteChoice notes = {noteInfo}/>\n                </div>\n            </div>\n\n            <div className=\"row newNoteButton\">\n                    <div className=\"form-check\">\n                        <input className=\"btn-check\" type=\"checkbox\" id={\"addNotes\"+props.projectName}\n                               checked={addNote}  onChange={() => setAddNotes(!addNote)}/>\n                        <label className=\"btn btn-primary buttonCustom\"  htmlFor={\"addNotes\"+props.projectName}> <FontAwesomeIcon icon={faPlus} /> add notes</label>\n                    </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">{\n\n                    addNote?\n                        <NoteBuilder submit={noteSubmitted} />:\"\"\n                }\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProjectContent;\n","import ProjectContent from \"./ProjectContent\";\nimport {useState} from \"react\";\n\nconst ProjectSelect = props => {\n    const[project,setProject] = useState(true);\n    return(\n    <div className=\"projectContainer\">\n        <div>\n            <h3>{props.projectName}</h3>\n            <div className=\"form-check \">\n                <input className=\"form-check-input\" type=\"checkbox\"  id={\"showFor\"+props.projectName}\n                       checked={project} onChange={() => setProject(!project)}/>\n                <label className=\"form-check-label\" htmlFor={\"showFor\"+props.projectName}>Show related notes</label>\n            </div>\n        </div>\n        <div>{\n            (project)?\n                <ProjectContent subject={props.subject} projectName={props.projectName}/>:\"\"\n        }\n        </div>\n    </div>\n    )\n}\n\nexport default ProjectSelect;\n","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport { faStickyNote} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Title = props =>\n    <h1 className=\"title\">{props.text} <FontAwesomeIcon icon={faStickyNote} /></h1>\n\nexport default Title;","import data from \"../data/data\";\nimport {useState} from \"react\";\nimport ProjectBuilder from \"../components/ProjectBuilder\";\nimport ProjectSelect from \"../components/ProjectSelect\";\nimport Title from \"../components/Title\";\n\nconst App = () =>{\n    const[projectInfo,setProjectSubmission]=useState({\n        project:\"\"\n    })\n\n    const projectSubmitted = (info, projectName) => {\n        /** The object passed to setSubmission involves two JS shortcuts:\n         * ...info means merge the info object with the following values\n         * formName in this context is a shortcut for formName: formName\n         * The longhand equivalent would be:\n         * {\n         *   phone: info.phone,\n         *   phoneType: info.phoneType,\n         *   email: info.email,\n         *   formName: formName\n         * }\n         */\n        setProjectSubmission({...info, projectName})\n    }\n\n    return(\n        <div className=\"container my-4\">\n            <Title text=\"Zitao's Note App\" />\n            <div className=\"row\">\n                <div className=\"col\">\n                    <ProjectBuilder submit={projectSubmitted} />\n                </div>\n            </div>\n            <div  id=\"section\">\n                <h2>Your Projects</h2>\n            </div>\n            <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-3\">\n                {\n                    Object.entries(data).map(([key, subject], i) => (\n                        <ProjectSelect subject={subject} projectName={key}/>\n                    ))\n\n                }\n                {\n                    (projectInfo.project !== \"\")&&\n                    <><ProjectSelect projectName={projectInfo.project} subject={\"\"} /></>\n                }\n            </div>\n        </div>\n    )\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/styles.css';\nimport bootstrap from 'bootstrap';\nimport App from './views/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}